## Autogenerated by Scribe. DO NOT MODIFY.

name: Auth
description: 'Autenticación de un usuario en el API'
endpoints:
  -
    httpMethods:
      - POST
    uri: api/v1/auth/login
    metadata:
      groupName: Auth
      groupDescription: 'Autenticación de un usuario en el API'
      subgroup: ''
      subgroupDescription: ''
      title: 'Inicio de sesión vía API'
      description: 'Inicia la sesión de un usuario y devuelve un token de acceso.'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      email:
        name: email
        description: 'El email del usuario.'
        required: true
        example: john.doe@example.com
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      password:
        name: password
        description: 'La contraseña del usuario.'
        required: true
        example: password
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      email: john.doe@example.com
      password: password
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"message":"Success","user":{"id":1,"name":"John Doe","email":"john.doe@example.com"},"token":"1|xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx"}'
        headers: []
        description: 'Inicio de sesión exitoso.'
        custom: []
      -
        status: 422
        content: '{"message":"The provided credentials are incorrect.","errors":{"email":["The provided credentials are incorrect."]}}'
        headers: []
        description: 'Credenciales inválidas.'
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/auth/logout
    metadata:
      groupName: Auth
      groupDescription: 'Autenticación de un usuario en el API'
      subgroup: ''
      subgroupDescription: ''
      title: 'Cerrar sesión (Logout)'
      description: 'Cierra la sesión del usuario actual revocando el token de acceso.'
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"message":"Successfully logged out"}'
        headers: []
        description: 'Cierre de sesión exitoso.'
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/auth/me
    metadata:
      groupName: Auth
      groupDescription: 'Autenticación de un usuario en el API'
      subgroup: ''
      subgroupDescription: ''
      title: 'Obtener información del usuario autenticado'
      description: 'Devuelve la información del usuario actualmente autenticado.'
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"data":{"name":"Ms. Elisabeth Okuneva","email":"gulgowski.asia@example.com","create_since":"0 seconds ago"}}'
        headers: []
        description: 'Información del usuario autenticado.'
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/auth/register
    metadata:
      groupName: Auth
      groupDescription: 'Autenticación de un usuario en el API'
      subgroup: ''
      subgroupDescription: ''
      title: 'Registro de usuario'
      description: 'Registra un nuevo usuario en el sistema.'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'El nombre del usuario.'
        required: true
        example: 'Jane Doe'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      email:
        name: email
        description: 'El email único del usuario.'
        required: true
        example: jane.doe@example.com
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      password:
        name: password
        description: 'La contraseña del usuario (mínimo 8 caracteres).'
        required: true
        example: newpassword
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      password_confirmation:
        name: password_confirmation
        description: 'Confirmación de la contraseña.'
        required: true
        example: newpassword
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      name: 'Jane Doe'
      email: jane.doe@example.com
      password: newpassword
      password_confirmation: newpassword
    fileParameters: []
    responses:
      -
        status: 201
        content: '{"message":"Usuario creado","user":{"id":1,"name":"Jane Doe","email":"jane.doe@example.com"}}'
        headers: []
        description: 'Usuario registrado exitosamente.'
        custom: []
      -
        status: 422
        content: '{"message":"The email has already been taken.","errors":{"email":["The email has already been taken."]}}'
        headers: []
        description: 'Error de validación (ej. email ya registrado).'
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
